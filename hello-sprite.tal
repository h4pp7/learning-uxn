( varvara device starting at 00
                                    output addresses for red, green and blue )
|00 @System  [ &vector $2 &pad $6   &r $2 &g $2 &b $2 ]

( screen device )
|20 @Screen  [ &vector $2 &width $2 &height $2 &pad  $2 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1 ]

( macros )
%INIT-X { #0008 .Screen/x DEO2 } ( -- )
%INIT-Y { #0008 .Screen/y DEO2 } ( -- )
%8ADD-X { .Screen/x DEI2 #0008 ADD2 .Screen/x DEO2 } ( -- )
%8ADD-Y { .Screen/y DEI2 #0008 ADD2 .Screen/y DEO2 } ( -- )

( main program ) 
|0100
      ( set system colors )
      #2ce9 .System/r DEO2
      #01c0 .System/g DEO2
      #2ce5 .System/b DEO2

      ( set initial x,y coordinates )
      INIT-X INIT-Y

      ( set sprite address )
      ;square .Screen/addr DEO2

      ( draw the sprite in all 16 possible variants of the low nibble )
      ( arrange the sprites in a 4x4 grid by changing the x and y coordinates )
      #00 .Screen/sprite DEO 8ADD-X
      #01 .Screen/sprite DEO 8ADD-X
      #02 .Screen/sprite DEO 8ADD-X
      #03 .Screen/sprite DEO 8ADD-Y

      INIT-X
      #04 .Screen/sprite DEO 8ADD-X
      #05 .Screen/sprite DEO 8ADD-X
      #06 .Screen/sprite DEO 8ADD-X
      #07 .Screen/sprite DEO 8ADD-Y

      INIT-X
      #08 .Screen/sprite DEO 8ADD-X
      #09 .Screen/sprite DEO 8ADD-X
      #0a .Screen/sprite DEO 8ADD-X
      #0b .Screen/sprite DEO 8ADD-Y

      INIT-X
      #0c .Screen/sprite DEO 8ADD-X
      #0d .Screen/sprite DEO 8ADD-X
      #0e .Screen/sprite DEO 8ADD-X
      #0f .Screen/sprite DEO 8ADD-Y

BRK

( store sprite in memory )
( 8 x 8 1bpp - 1 bit per pixel - sprite represented by these numbers:
  11111111:  ff
  10000001:  81
  10000001:  81
  10000001:  81
  10000001:  81
  10000001:  81
  10000001:  81
  11111111:  ff )

@square ff81 8181 8181 81ff
